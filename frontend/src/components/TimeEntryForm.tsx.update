// Add these imports
import { useTagStore } from '../store/tagStore';
import { useEffect } from 'react';

// Inside the TimeEntryForm component, add this state:
const [selectedTags, setSelectedTags] = useState<string[]>(timeEntry?.tags || []);
const { tags, fetchTags } = useTagStore();

// Add this effect to load tags
useEffect(() => {
  fetchTags();
}, [fetchTags]);

// Add this function to handle tag selection
const handleTagToggle = (tagId: string) => {
  setSelectedTags(prev => 
    prev.includes(tagId) 
      ? prev.filter(id => id !== tagId) 
      : [...prev, tagId]
  );
};

// Inside the form, after the notes field, add this section:
<div>
  <label
    className="block text-sm font-medium text-gray-700 dark:text-gray-300"
  >
    {t('timeEntries.tags')}
  </label>
  <div className="mt-2 flex flex-wrap gap-2">
    {tags.map(tag => (
      <button
        key={tag.id}
        type="button"
        onClick={() => handleTagToggle(tag.id)}
        className={`inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium ${
          selectedTags.includes(tag.id)
            ? 'bg-primary-100 text-primary-800 dark:bg-primary-900 dark:text-primary-300'
            : 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300'
        }`}
      >
        <div
          className="w-2 h-2 rounded-full mr-1.5"
          style={{ backgroundColor: tag.color }}
        />
        {tag.name}
      </button>
    ))}
    {tags.length === 0 && (
      <span className="text-sm text-gray-500 dark:text-gray-400">
        {t('tags.noTags')} <Link to="/tags/new" className="text-primary-600 dark:text-primary-400 underline">{t('tags.new')}</Link>
      </span>
    )}
  </div>
</div>

// Update the handleSubmit function to include tags:
timeEntryData.tags = selectedTags;
